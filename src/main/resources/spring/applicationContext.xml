<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--配置扫描器是为了扫描包下面的 @xxx修饰的注解, 这边过滤掉@Control注解，该注解在SpringMVC配置文件中已经配置了-->
<!--    <context:component-scan base-package="com.wicresoft">-->
<!--        <context:exclude-filter type="annotation"-->
<!--                                expression="org.springframework.stereotype.Controller" />-->
<!--    </context:component-scan>-->
    <context:component-scan base-package="com.wicresoft"></context:component-scan>

    <!--引入数据库配置文件-->
    <context:property-placeholder location="classpath:dbconfig.properties"></context:property-placeholder>

    <!--Druid连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--数据库驱动-->
        <property name="driverClassName" value="${driver}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${username}"></property>
        <property name="password" value="${password}"></property>

        <!-- 初始化大小、最小、最大连接数 -->
        <property name="initialSize" value="3" />
        <property name="minIdle" value="3" />
        <property name="maxActive" value="20" />
        <!-- 连接等待超时时间，单位是毫秒 -->
        <property name="maxWait" value="60000" />
        <!-- 配置检测间隔，检测需要关闭的空闲连接 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 一个连接在池中的最小生存时间 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，指定每个连接PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <!-- 配置监控统计拦截的filters，关闭后监控界面sql无法统计 -->
        <property name="filters" value="stat" />

    </bean>

    <!--c3p0连接池-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
    <!--<property name="driverClass" value="${jdbc.driver}"></property>-->
    <!--<property name="jdbcUrl" value="${jdbc.url}"></property>-->
    <!--<property name="user" value="${jdbc.username}"></property>-->
    <!--<property name="password" value="${jdbc.password}"></property>-->
    <!--</bean>-->

    <!--Spring与Mybatis整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入dataSource属性-->
        <property name="dataSource" ref="dataSource"></property>
        <!--Mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!--Mapping路径 -->
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--&lt;!&ndash;分页插件&ndash;&gt;-->
                <!--<bean class="com.github.pagehelper.PageInterceptor">-->
                    <!--<property name="properties">-->
                        <!--<value>-->
                            <!--helperDialect=mysql-->
                            <!--reasonable=true-->
                            <!--supportMethodsArguments=true-->
                            <!--params=count=countSql-->
                            <!--autoRuntimeDialect=true-->
                            <!--pageSizeZero=true-->
                        <!--</value>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</array>-->
        <!--</property>-->

    </bean>

    <!--Mapper扫描器 即Mapper接口扫描器-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wicresoft.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--以注解方式配置事务
    开启CGLib动态代理-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"></tx:annotation-driven>

    <!--以XML方式配置事务-->
    <!--<tx:advice id="transactionAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" propagation="REQUIRED"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="transactionPointcut" expression="execution(* com.wicresoft.serviceImpl.EmployeeServiceImpl.*(..))" />-->
        <!--<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"></aop:advisor>-->
    <!--</aop:config>-->



    <!--配置login validation aop-->
    <bean id="validateBean" class="com.wicresoft.aop.LoginValidate"></bean>

    <aop:config>
        <aop:pointcut id="validatePointcut" expression="execution(* com.wicresoft.serviceImpl.EmployeeServiceImpl.*(..))" />

        <aop:aspect id="myAspect" ref="validateBean">
            <aop:before method="Before" pointcut-ref="validatePointcut"></aop:before>
        </aop:aspect>
    </aop:config>

    <!-- Swagger 整合配置 -->
    <!-- 注册Bean 对象 -->
    <!--<bean id="swaggerConfig2" class="com.wicresoft.swagger.SwaggerConfig"></bean>-->


</beans>